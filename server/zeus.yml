- hosts: all
  remote_user: "{{ remote_user }}"
  gather_facts: no
  become: yes
  vars:
    zeus_db_password: "{{ (lookup('file', 'secrets/zeus-secrets-{{ inventory_hostname }}.json') | from_json)['db_password'] }}"
    is_ubuntu: "{{ ubuntu | default(false) }}"
  tasks:

    - name: zeus user
      user:
        name: zeus
        shell: /bin/bash
        home: "{{ zeus_path }}"

    - name: www-data user
      user:
        name: www-data
        groups: zeus
        append: yes

    - apt_repository: repo="ppa:deadsnakes/ppa"
      when: is_ubuntu

    - apt: pkg={{ item }} state=latest
      when: is_ubuntu
      with_items:
        - python3.6
        - python3.6-dev
        - python3-psycopg2
        - postgresql-12
        - libpq-dev
        - libgmp-dev
        - libmpfr-dev
        - libmpc-dev
        - g++
        - gettext
        # TODO configure Redis, set up a password
        - redis-server
        # - fonts-open-sans

    - name: zeus database
      when: is_ubuntu
      postgresql_db:
        name: zeus
      become_user: postgres

    - name: zeus postgres user
      when: is_ubuntu
      postgresql_user:
        name: zeus
        db: zeus
        password: "{{ zeus_db_password }}"
      become_user: postgres

    - name: config dir
      file:
        path: "{{ zeus_path }}"/config
        state: directory
        owner: zeus
        group: zeus

    - name: secrets.json
      copy:
        src: 'secrets/zeus-secrets-{{ inventory_hostname }}.json'
        dest: "{{ zeus_path }}"/config/secrets.json
        owner: zeus
        group: zeus
        mode: 0770
      notify: restart services

    - name: settings_local.py
      template:
        src: templates/zeus_settings_local.py
        dest: "{{ zeus_path }}"/config/settings_local.py
        owner: zeus
        group: zeus
        mode: 0770
      notify: restart services

    - name: uwsgi.ini
      template:
        src: templates/zeus_uwsgi.ini
        dest: "{{ zeus_path }}"/uwsgi.ini
        owner: zeus

    - name: /var/run/zeus
      file:
        path: /var/run/zeus
        state: directory
        owner: zeus
        group: zeus
        mode: 0770

    - name: uwsgi service configuration
      template:
        src: templates/zeus-uwsgi.service
        dest: /etc/systemd/system/zeus-uwsgi.service
      notify:
        - systemctl daemon-reload
        - restart services

    - name: worker service configuration
      template:
        src: templates/zeus-worker.service
        dest: /etc/systemd/system/zeus-worker.service
      notify:
        - systemctl daemon-reload
        - restart services

    - name: nginx template
      when: is_ubuntu
      template:
        src: templates/zeus-nginx.conf
        dest: /etc/nginx/sites-available/zeus
      notify: reload nginx

    - name: symlink nginx template
      when: is_ubuntu
      file:
        src: /etc/nginx/sites-available/zeus
        dest: /etc/nginx/sites-enabled/zeus
        state: link
      notify: reload nginx

    - name: Install virtualenv via pip
      pip:
        name: virtualenv
        executable: pip3

    - name: make initial virtualenv
      pip:
        name: "{{ item }}"
        state: latest
        virtualenv: "{{ zeus_path }}"/virtualenv
        virtualenv_python: python3.6
      become_user: zeus
      with_items:
        - pipenv
        - uwsgi

    # Deploy!

    - name: check git repo
      git:
        repo: "{{ zeus_git_repo }}"
        dest: "{{ zeus_path }}"/install
        version: "{{ zeus_git_version }}"
      become_user: zeus
      register: git_repo
      tags: [deploy]
      check_mode: yes

    - name: check version file
      copy:
        dest: "{{ zeus_path }}"/version
        content: "{{ git_repo.after }}"
        owner: zeus
        group: zeus
      register: version_file
      check_mode: yes

    - name: deploy new version
      tags: [deploy]
      when: version_file.changed
      block:

      - name: remove version file
        file:
          path: "{{ zeus_path }}"/version
          state: absent

      - name: stop services
        service: name="{{ item }}" state=stopped
        with_items:
          - zeus-uwsgi
          - zeus-worker

      - name: update source
        git:
          repo: "{{ zeus_git_repo }}"
          dest: "{{ zeus_path }}"/install
          version: "{{ git_repo.after }}"
          refspec: "refs/heads/{{ zeus_git_version }}"
        become_user: zeus

      - name: set permissions of data directories
        file:
          path: ""{{ zeus_path }}"/install/{{ item }}"
          state: directory
          owner: zeus
          group: zeus
          mode: 0770
        with_items:
          - data
          - data/election_logs
          - data/mixes
          - data/proofs
          - data/results

      - name: symlink settings/local.py
        file:
          src: "{{ zeus_path }}"/config/settings_local.py
          dest: "{{ zeus_path }}"/install/settings/local.py
          state: link
          owner: zeus
          group: zeus

      - name: pipenv sync
        shell: |
          . ../virtualenv/bin/activate
          pipenv sync
        args:
          chdir: "{{ zeus_path }}"/install
        become_user: zeus

      - name: compile translations
        shell: |
          . ../virtualenv/bin/activate
          ./compile-translations.sh
        args:
          chdir: "{{ zeus_path }}"/install
        become_user: zeus

      - name: update static files
        shell: |
          . ../virtualenv/bin/activate
          rm -rf sitestatic
          python manage.py collectstatic --noinput
        args:
          chdir: "{{ zeus_path }}"/install
        become_user: zeus

      - name: start services
        service: name="{{ item }}" state=started
        with_items:
          - zeus-uwsgi
          - zeus-worker

      - name: create version file
        copy:
          dest: "{{ zeus_path }}"/version
          content: "{{ git_repo.after }}"
          owner: zeus
          group: zeus

  handlers:
    - name: reload nginx
      service: name=nginx state=reloaded
    - name: systemctl daemon-reload
      command: systemctl daemon-reload
    - name: restart services
      service: name="{{ item }}" state=restarted
      with_items:
        - zeus-uwsgi
        - zeus-worker
